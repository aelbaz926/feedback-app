services:
  db:
    image: postgres:14
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d feedback"]
      interval: 10s
      retries: 5
      start_period: 30s
    volumes:
      - db-data:/var/lib/postgresql/data
    secrets:
      - db-password
    networks:
      - backnet
    expose:
      - "5432"
    environment:
      - POSTGRES_DB=feedback
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
  backend:
    build: 
      context: ./src/feedback_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
    networks:
      - backnet
      - frontnet
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_NAME=feedback

  frontend:
    build:
      context: ./src/feedback_frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "9090:80"
    networks:
      - frontnet
    environment:
      - BACKEND_URL=http://backend:5000


volumes:
  db-data:

secrets:
  db-password:
    file: src/feedback_db/password.txt

networks:
  backnet:
  frontnet: